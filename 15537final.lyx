#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Μοντέλα επικοινωνίας μεταξύ νημάτων και αρχέγονες δομές συγχρονισμού: Μια
 μελέτη περίπτωσης (Working title)
\end_layout

\begin_layout Author
Νεσλεχανίδης Οδυσσέας 15537
\end_layout

\begin_layout Standard
Θα παρουσιαστούν κοινές αρχέγονες δομές συγχρονισμού (Semaphore, Spinlock,
 Barrier), και οι εφαρμογές τους στη λύση κλασικών προβλημάτων συγχρονισμού.
 Θα μελετηθούν πολυνηματικές υλοποιήσεις τους σε κώδικα C.
 Ακόμη, θα αναλυθούν οι παράμετροι που αφορούν την υλοποίηση μοντέλων επικοινωνί
ας μεταξύ νημάτων.
 Τέλος, θα γραφεί πρόγραμμα σε C με χρήση της βιβλιοθήκης pthreads, ως εφαρμογή
 των παραπάνω στο πρόβλημα του υπολογισμού της μεταφοράς θερμότητας.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Part
Θεωρία παράλληλου προγραμματισμού συστημάτων
\end_layout

\begin_layout Section*
Εισαγωγή
\end_layout

\begin_layout Standard
Τα προγραμματιστικά εργαλεία που μας επιτρέπουν να εκμεταλλευόμαστε τις
 δυνατότητες παράλληλης επεξεργασίας των σύγχρονων πολυεπεξεργαστών και
 συστοιχιών (clusters) επεξεργαστών σχεδιάζονται βάσει ενός συστήματος μοντέλων
 παράλληλου προγραμματισμού.
 Ιστορικά, αυτά τα μοντέλα ανταποκρίνονταν πιο άμεσα στη δομή του παράλληλου
 υλικού.
 Σήμερα, αποτελούν κυρίως βολικές αφαιρέσεις για την κατηγοριοποίηση των
 αλγορίθμων που χρησιμοποιούνται στον παράλληλο προγραμματισμό και για τους
 όρους σύνθεσης και χρήσης τους εντός των προγραμμάτων.
\begin_inset CommandInset citation
LatexCommand cite
key "parprogmodel"

\end_inset


\begin_inset CommandInset citation
LatexCommand cite
key "sharedvsdistributed"

\end_inset

 
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
Την ίδια στιγμή, η επιλογή ενός μοντέλου έχει θεμελιώδη ρόλο στις αποφάσεις
 που λαμβάνονται κατά το σχεδιασμό εξειδικευμένων παράλληλων υπολογιστικών
 συστημάτων μεγάλης κλίμακας, στον κλάδο της υπολογιστικής υψηλών αποδόσεων
 (high performance computing).
\begin_inset CommandInset citation
LatexCommand cite
key "hpcdesign"

\end_inset


\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
Τα μοντέλα παράλληλου προγραμματισμού χωρίζονται σε άξονες βάσει του τρόπου
 (εάν υφίσταται) που επικοινωνούν μεταξύ τους οι παράλληλες διεργασίες και
 βάσει του είδους προβλημάτων που επιδιώκεται να επιλυθούν με παράλληλη
 επεξεργασία.
\begin_inset CommandInset citation
LatexCommand cite
key "parprogmodel"

\end_inset

 
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
Η παρούσα εργασία κινείται στον πρώτο άξονα, παρουσιάζοντας τα βασικά μοντέλα
 επικοινωνίας μεταξύ διεργασιών και ειδικότερα μελετώντας τα κλασικά προγραμματι
στικά εργαλεία για την επίλυση προβλημάτων συγχρονισμού που ενυπάρχουν στον
 προγραμματισμό κοινόχρηστης μνήμης, τις λεγόμενες αρχέγονες δομές συγχρονισμού
 (synchronization primitives).
\end_layout

\begin_layout Section*
Επικοινωνία μέσω κοινόχρηστης μνήμης (shared memory)
\end_layout

\begin_layout Standard
Στην παράλληλη ή ταυτόχρονη (concurrent) υπολογιστική, ένας πολύ φυσικός
 τρόπος για την επίτευξη επικοινωνίας μεταξύ διεργασιών, καθώς και για την
 αποφυγή σπατάλης χώρου από πολλαπλά όμοια αντίγραφα δεδομένων, είναι η
 χρήση ενός κοινού χώρου μνήμης από πολλές διεργασίες.
 Στο παρελθόν, ήταν διαδεδομένα τα υπολογιστικά συστήματα πολυεπεξεργαστών
 που διέθεταν αληθινά κοινόχρηστη μνήμη, με την οποία επικοινωνούσαν μέσω
 κοινού διαύλου.
 Σήμερα, η πραγματικότητα είναι διαφορετική.
\begin_inset CommandInset citation
LatexCommand cite
key "sharedvsdistributed"

\end_inset


\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
Με την αύξηση του πλήθους και της ταχύτητας των κεντρικών μονάδων επεξεργασίας
 (CPU) των πολυεπεξεργαστών, η ανάγκη διαχείρισης του προβλήματος συμφόρησης
 (bottleneck) von Neumann επέβαλε αλλαγή στο μοντέλο επικοινωνίας των κεντρικών
 μονάδων επεξεργασίας με τη μνήμη.
 Οι σημερινοί πολυεπεξεργαστές παρακάμπτουν σε ένα βαθμό το παραπάνω πρόβλημα
 έχοντας σχεδιαστεί σε πρότυπο μη-ομοιογενούς πρόσβασης μνήμης (Non-Uniform
 Memory Access: NUMA).
\begin_inset CommandInset citation
LatexCommand cite
key "neumannbottleneck"

\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Στις αρχιτεκτονικές αυτού του προτύπου, όπως μαρτυράει το όνομα του, χαρακτηριστ
ική είναι η ανομοιογένεια στην ταχύτητα πρόσβασης (latency) ενός επεξεργαστή
 στα διάφορα στοιχεία μνήμης, ανάλογα με την απόσταση του στοιχείου μνήμης
 από τον εν λόγω επεξεργαστή.
\begin_inset CommandInset citation
LatexCommand cite
key "numa"

\end_inset

 Οι καθιερωμένες διεπαφές προγραμματισμού εφαρμογών (APIs) κοινόχρηστης
 μνήμης (pthread, OpenMP) είτε δεν παρέχουν εύχρηστα μέσα για τη διαχείριση,
 μέσω κώδικα, της παραπάνω ιδιότητας των σύγχρονων πολυεπεξεργαστών
\begin_inset CommandInset citation
LatexCommand cite
key "openmpnuma"

\end_inset

, είτε οι λύσεις που παρέχουν, παρεχόμενες ως επεκτάσεις, καταργούν τη φορητότητ
α του κώδικα
\begin_inset CommandInset citation
LatexCommand cite
key "pthreadnuma"

\end_inset

.
 Η διαχείριση της μνήμης συνήθως αφήνεται, κατά συνέπεια, στο λειτουργικό
 σύστημα.
\begin_inset Newline newline
\end_inset

Τα αναφερθέντα χαρακτηριστικά των εργαλείων προγραμματισμού που στηρίζονται
 στην αφαίρεση μιας εικονικά ενιαίας κοινόχρηστης μνήμης συντελούν στο αποτέλεσμ
α η χρήση τους να περιορίζεται σε υπολογιστικά συστήματα μικρής κλίμακας.
 Διαδεδομένη, ωστόσο, είναι η χρήση τους σε συνδυασμό με εργαλεία προγραμματισμο
ύ κατανεμημένης μνήμης, για την υλοποίηση παράλληλων προγραμμάτων που εκτελούν
 επί μέρους εργασίες σε μικρά σύνολα επεξεργαστών, εντός υπολογιστικών συστημάτω
ν μεγαλύτερης κλίμακας.
 Σε αυτού του είδους τις υβριδικές προσεγγίσεις, η επικοινωνία των επί μέρους
 εργασιών μεταξύ τους, αλλά και ευρύτερα με το σύστημα, υλοποιείται σε όρους
 προγραμματισμού κατανεμημένης μνήμης (message passing).
\begin_inset CommandInset citation
LatexCommand cite
key "hybrid"

\end_inset


\end_layout

\begin_layout Section*
Επικοινωνία μεσω μηνυμάτων (message passing)
\end_layout

\begin_layout Part
Κλασικά προβλήματα συγχρονισμού
\end_layout

\begin_layout Subsection*
Λεπτομέρειες υλοποίησης 
\end_layout

\begin_layout Standard
Εισαγωγή στη βιβλιοθήκη pthreads, παρουσίαση των μεθόδων που πρόκειται να
 χρησιμοποιηθούν.
\end_layout

\begin_layout Section
Dining philosophers
\end_layout

\begin_layout Standard
Παρουσίαση του προβλήματος (εισαγωγή όρων deadlock, resource starvation),
 λύση με μέθοδο arbitrator για επίδειξη barriers.
 Επιλογή δυαδικού σηματοφορέα αντί mutex, για συνοχή.
\end_layout

\begin_layout Section
Readers-writers
\end_layout

\begin_layout Standard
Παρουσίαση και λύση του προβλήματος, με προτίμηση στην απλούστερη εκδοχή
 όπου δίνεται αφορμή για αμοιβαίο αποκλεισμό με χρήση spinlock.
 Εάν αυτό αποδειχτεί δύσκολο, λύση της απλούστερης εκδοχής (producer-consumer
 equivalent) με χρήση monitor.
 Στην τελευταία περίπτωση, θα προηγηθεί κάλυψη της εν λόγω δομής στη θεωρία.
\end_layout

\begin_layout Part
Μεταφορά θερμότητας σε δισδιάστατο χώρο: ένα πρόβλημα παράλληλου προγραμματισμού
\end_layout

\begin_layout Standard
Παρουσίαση του προβλήματος παράλληλου υπολογισμού της μεταφοράς θερμότητας
 σε δισδιάστατο χώρο.
 Μελέτη της παράλληλης λύσης με προγραμματισμό κατανεμημένης μνήμης (MPI),
 λύση με προγραμματισμό κοινόχρηστης μνήμης (pthreads).
\end_layout

\begin_layout Standard
Τι προκύπτει από τη σύγκριση των δυο λύσεων ως προς την απόδοση και την
 απλότητα υλοποίησης; Ποια γενικά κριτήρια για την επιλογή ανάμεσα στους
 δύο τύπους παράλληλου προγραμματισμού μπορούν να εξαχθούν από τη μελέτη
 των λύσεων του συγκεκριμένου προβλήματος;
\end_layout

\begin_layout Standard
Η εσωτερική δομή της ενότητας αυτής θα οριστεί αργότερα.
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "parprogmodel"

\end_inset

https://en.wikipedia.org/wiki/Parallel_programming_model
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "sharedvsdistributed"

\end_inset

https://stackoverflow.com/questions/36642382/main-difference-between-shared-memor
y-and-distributed-memory#answer-36659895
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "hpcdesign"

\end_inset

www.shodor.org/media/content/petascale/materials/UPModules/beginnersGuideHPC/modul
eDocument_pdf.pdf
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "neumannbottleneck"

\end_inset

https://en.wikipedia.org/wiki/Von_Neumann_architecture#Mitigations
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "numa"

\end_inset

https://en.wikipedia.org/wiki/Non-uniform_memory_access
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "openmpnuma"

\end_inset

https://stackoverflow.com/questions/11959906/openmp-and-numa-relation#answer-1197
5593
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "pthreadnuma"

\end_inset

http://man7.org/linux/man-pages/man3/pthread_setaffinity_np.3.html
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "hybrid"

\end_inset

https://software.intel.com/en-us/articles/hybrid-parallelism-parallel-distributed-
memory-and-shared-memory-computing
\end_layout

\end_body
\end_document
